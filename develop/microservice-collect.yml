#自定义配置
arb:
  eureka:
    url: localhost
  service:
    name: microservice-collect
    port: 8401
    url: localhost
  database:
    url: 192.168.0.100
    username: root
    password: Arbfintech@123
  rabbitmq:
    url: 192.168.0.100
    username: Arbfintech
    password: Arbfintech

logging:
  config: classpath:log4j2.yml

eureka:
  instance:
    instance-id: localhost:microservice-collect:8401
    hostname: localhost
    ip-address: localhost
    prefer-ip-address: true

  #    lease-renewal-interval-in-seconds: 10
  #    lease-expiration-duration-in-seconds: 30
  client:
    healthcheck: enabled
    service-url:
      defaultZone: http://localhost:8901/eureka/

spring:
  application:
    name: microservice-collect
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.0.100/panda?charset=utf8mb4&useSSL=false&rewriteBatchedStatements=true&autoReconnect=true
    username: root
    password: Arbfintech@123
    test-on-borrow: true                      # 指明是否从池中取出连接前进行检验，如果检验失败，则从池中取出连接并尝试取出另一个
    test-while-idle: true                     # 指明连接是否被空闲连接回收器（如果有）进行检验，如果检测失败，则连接将被从池中去除
    time-between-eviction-runs-millis: 60000  # 在空闲连接回收器线程运行期间休眠的时间值，姨毫秒为单位。如果设置为非整数，则不运行空闲连接回收器线程
  http:
    multipart:
      enabled: true
      file-size-threshold: 0
      max-file-size: 256Mb
      max-request-size: 256Mb
  jpa:
    database: mysql
    generate-ddl: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    show-sql: false
  rabbitmq:
    host: 192.168.0.100
    port: 5672
    username: Arbfintech
    password: Arbfintech
    publisher-confirms: true
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual

feign:
  client:
    config:
      microservice-agent:
        connectTimeout: 60000
        readTimeout: 60000
      microservice-business:
        connectTimeout: 60000
        readTimeout: 60000
      microservice-collect:
        connectTimeout: 60000
        readTimeout: 60000
      microservice-maintenance:
        connectTimeout: 60000
        readTimeout: 60000
  httpclient:
    connection-timeout: 60000

server:
  max-http-header-size: 10240000
  port: 8401




